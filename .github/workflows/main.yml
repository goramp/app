name: CI
on:
  push:
    tags:
    - 'v*'
jobs:
  build_web:
    name: Build Flutter (Web)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: subosito/flutter-action@master
      with:
          channel: 'stable'
    - run: git config --global url."https://${{ secrets.GIT_USER }}:${{ secrets.GIT_TOKEN }}@github.com/".insteadOf https://github.com/
    - run: flutter pub get
    - run: flutter config --enable-web
    - name: Run dart env
      run: dart tool/env.dart
      env:
          WIREDASH_DASH_SECRET: ${{ secrets.PROD_WIREDASH_DASH_SECRET }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          VAPID_KEY: ${{ secrets.PROD_VAPID_KEY }}
          DSN: ${{ secrets.WEB_DSN }}
          PASSBASE_API_KEY: ${{ secrets.PROD_PASSBASE_API_KEY }} 
          TRANSACK_API_KEY: ${{ secrets.PROD_TRANSACK_API_KEY }}
          FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
          SENTRY_RELEASE_NAME: ${{ github.run_id }}-${{ github.run_number }}-prod 
          RECAPTCHA_V3: ${{ secrets.KUROBI_PROD_RECAPTHCA }}
          RAMP_API_KEY: ${{ secrets.PROD_RAMP_API_KEY }}
          CONFIG_FILE_NAME: tool/prod.env
    - name: Run Web env
      run: |
            . ./parse-tmp-env.sh ./web/index.example.html ./web/index.html
            . ./parse-tmp-env.sh ./web/manifest.example.json ./web/manifest.json
            . ./parse-tmp-env.sh ./web/firebase-messaging-sw.example.js ./web/firebase-messaging-sw.js
      env:
          APP_NAME: Kurobi
          APP_TITLE: Video chat for experts powered by the blockchain
          APP_DESCRIPTION: Kurobi allows experts to connect 1:1 via voice or video chat with their audience and earn crypto or cash
          APP_BACKGROUND_COLOR: "#141927"
          APP_THEME_LIGHT_COLOR: "#ffffff"
          APP_THEME_DARK_COLOR: "#2a2a2a"
          APP_ICON_SVG: icons/kurobi.svg
          APP_ICON_MASKABLE_PNG_512: icons/kurobi-maskable-512.png    
          APP_ICON_MASKABLE_PNG_192: icons/kurobi-maskable-192.png
          APP_ICON_PNG_512: icons/kurobi-512.png
          APP_ICON_PNG_192: icons/kurobi-192.png
          APP_SHORT_NAME: Kurobi - Get paid for your time
          FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
          FIREBASE_PROJECT_ID: kurobi-756d5
          FIREBASE_STORAGE_BUCKET: kurobi-756d5.appspot.com
          FIREBASE_MESSAGING_SENDER_ID: 998807041383
          FIREBASE_APP_ID: 1:998807041383:web:6e79face7c5f6b77ca6bc2
          FIREBASE_MEASUREMENT_ID: G-G1K2VJ5LXV
          FIREBASE_ANDROID_CLIENT_ID: 878753935040-atste69i9q6q5f923f9rsktqt2ppbh92.apps.googleusercontent.com
          FIREBASE_IOS_CLIENT_ID: 878753935040-frv72693bo58e9oak9je8p8ebue1puif.apps.googleusercontent.com
          FIREBASE_AUTH_DOMAIN: kurobi-756d5.firebaseapp.com
          RECAPTCHA_V3: ${{ secrets.KUROBI_PROD_RECAPTHCA }}
          FACEBOOK_APP_ID: 384554333075061 
          APP_VERSION: ${{ github.run_id }}-${{ github.run_number }}-prod 
    - run: flutter build web -t lib/main.dart --web-renderer html --source-maps #--web-renderer canvaskit
    #- run: sed -i 's/q.autoplay=!0/q.autoplay=1/g' build/web/main.dart.js
    - name: Archive Production Artifact
      uses: actions/upload-artifact@master
      with:
        name: web-build
        path: build/web

  deploy_web_aws:
    name: Deploy Web to AWS s3
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web-build
          path: build/web

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Deploy static site to S3 bucket
        env:
            S3_BUCKET_NAME: prod-kurobi
            S3_CACHE_MAX_AGE: 31536000
        run: |
          aws s3 sync build/web s3://$S3_BUCKET_NAME --delete
          aws s3 cp s3://$S3_BUCKET_NAME/ s3://$S3_BUCKET_NAME/ --metadata-directive REPLACE \
          --exclude "*" --include "*.jpg" --include "*.gif" --include "*.png" \
          --recursive --cache-control max-age=$S3_CACHE_MAX_AGE
      - name: Invalidate Cloud front distribution
        env:
            CLOUD_FRONT_DISTRIBUTION: ELZA96GJ4X2X1
        run: aws cloudfront create-invalidation --distribution-id $CLOUD_FRONT_DISTRIBUTION --paths "/*"
      - name: Install Sentry cli      
        run: curl -sL https://sentry.io/get-cli/ | bash
      - name: Upload release to sentry
        run: |
            sentry-cli releases new ${{ github.run_id }}-${{ github.run_number }}-prod  
            sentry-cli releases files ${{ github.run_id }}-${{ github.run_number }}-prod  upload-sourcemaps build/web
            sentry-cli releases finalize ${{ github.run_id }}-${{ github.run_number }}-prod 
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.WEB_DSN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }} 
        
 